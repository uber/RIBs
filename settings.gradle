import org.gradle.api.initialization.resolve.RepositoriesMode

pluginManagement {
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
    }
}

dependencyResolutionManagement {
    // rib-intellij-plugin project applies the IntelliJ plugin, which applies custom repositories.
    // Otherwise, this should be FAIL_ON_PROJECT_REPO.
    repositoriesMode.set(RepositoriesMode.PREFER_PROJECT)
    repositories {
        google()
        mavenCentral()
    }
    versionCatalogs {
        appLibs {
            from(files("gradle/app-libs.versions.toml"))
        }
        testLibs {
            from(files("gradle/test-libs.versions.toml"))
        }
    }
}

includeBuild 'conventions'

include ':libraries:rib-test'
include ':libraries:rib-android'
include ':libraries:rib-android-compose'
include ':libraries:rib-android-core'
include ':libraries:rib-base'
include ':libraries:rib-compiler-app'
include ':libraries:rib-compiler-test'
include ':libraries:rib-coroutines'
include ':libraries:rib-coroutines-test'
include ':libraries:rib-debug-utils'
include ':libraries:rib-screen-stack-base'
include ':libraries:rib-router-navigator'
include ':libraries:rib-workflow'
include ':libraries:rib-workflow-test'
include ':tooling:rib-intellij-plugin'
include ':tooling:rib-intellij-plugin:native:intellij-broadcast-rib'
include ':tooling:rib-flipper-plugin'
include ':tooling:utils:intellij-broadcast-core'
include ':tutorials:tutorial1'
include ':tutorials:tutorial2'
include ':tutorials:tutorial3'
include ':tutorials:tutorial3-completed'
include ':tutorials:tutorial4'
include ':demos:flipper'
include ':demos:intellij'
include ':demos:memory-leaks'
include ':demos:compose'
include ':demos:rib-workers'
